class Solution {
public:
      int minpaths(int m, int n,vector<vector<int>>& grid,int i, int j,vector<vector<int>> &dp){
         if(i==m-1 && j==n-1)
             return grid[i][j];
          
          int subansr=INT_MAX,subansd=INT_MAX;
          if(i+1<=m-1){ 
          dp[i+1][j]!=-1?subansd=grid[i][j]+dp[i+1][j]: subansd=grid[i][j]+minpaths(m,n,grid,i+1,j,dp);}
          if(j+1<=n-1){
           dp[i][j+1]!=-1?subansd=grid[i][j]+dp[i][j+1]: subansr=grid[i][j]+minpaths(m,n,grid,i,j+1,dp);}
          
          return dp[i][j]= min(subansd,subansr);
          
    }
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> dp(m+1,vector<int>(n+1,-1));
        return minpaths(m,n,grid,0,0,dp); 
        
    }
};
